.task-lives {
    @include add-flex;
    opacity: 0;
    position: absolute;
    top: -10px;
    left: 10px;
    filter: drop-shadow(1px 1px 3px $defLightRed);
    transition: 300ms;

    .heart-holder {
        @include add-flex;
        position: relative;
        top: 0;
        filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.3));
        transition: 300ms;
        z-index: 1;
        
        img {
            height: 45px;
            width: 45px;
            object-fit: contain;
        }
    
        .task-lives-infinity {
            height: 50px;
            width: 50px;
        }

        strong {
            color: white;
            font-size: set-size(lg);
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            transition: 300ms;
        }
    }

    .task-lives-line-holder {
        @include add-flex(row, flex-start);
        height: 15px;
        background-color: rgba($color: $defLighterRed, $alpha: 0.3);
        border-top-right-radius: 7px;
        border-bottom-right-radius: 7px;
        position: relative;
        left: -10px;
        transition: 300ms;
    }

    .task-lives-line {
        height: 15px;
        width: 50px;
        background-color: $defLightRed;
        border: 3px solid white;
        border-radius: 0;
        transition: 300ms;

        &:last-child {
            border-top-right-radius: 7px;
            border-bottom-right-radius: 7px;
        }
    }
}

.active-task-lives {
    opacity: 1;
    top: 10px;
}

.task-progress-bar-holder {
    @include add-flex;
    width: 70%;
    opacity: 0;
    position: relative;
    top: 0;
    transition: 300ms;
    
    .task-progress-bar {
        @include add-flex;
        height: 25px;
        width: 100%;
        background-color: white;
        border: 1px solid rgb(200, 200, 200);
        border-radius: 20px;
        box-shadow: $defLighterShadow;
        position: relative;
        overflow: hidden;
    
        .progress-bar-line {
            height: 100%;
            width: 0;
            background-color: $defLightBlue;
            border-radius: 20px;
            box-shadow: 10px 0 0 $defLightRed;
            position: absolute;
            left: 0;
            transition: 500ms;
        }
    }

    p {
        color: $defBlue;
        font-size: set-size(md);
        font-weight: bold;
        opacity: 0;
        position: absolute;
        top: -100%;
        margin: 0;
        transform: translateX(-50%);
        transition: 300ms;
    }
}

.active-task-progress-bar-holder {
    opacity: 1;
    top: 10%;
}

.exercise-modal-task {
    @include add-flex(column, center);
    width: 100%;
    opacity: 0;
    position: relative;
    left: 20px;
    transition: 300ms;
    overflow: hidden;
    
    h3 {
        color: $defDarkGrey;
        font-size: set-size(xxl);
        text-align: center;
        position: relative;
        top: 0;
        transition: 300ms;
    }

    .task-holder {
        @include add-flex;
        width: 100%;
        
        .interface {
            position: relative;
            top: 0;
            transition: 200ms;
        }
        
        @import "./tasks/main";
    }

    .task-button-holder {
        @include add-flex;
        gap: 15px;
        width: 80%;
        position: absolute;
        bottom: -100px;
        transition: 300ms;

        @include wide-button;

        .switch-modes-button {
            display: none;

            img {
                height: 30px;
                width: 30px;
                object-fit: contain;
            }
        }

        .active-switch-modes-button {
            @include add-flex;
            background-color: transparent;
            border: 3px dashed $defDarkGrey;
            border-radius: 50%;
            opacity: 0.5;
            cursor: pointer;
            padding: 10px;
            transition: 300ms;

            &:hover {
                border: 3px solid $defDarkGrey;
                opacity: 1;
            }
        }
        
        .wide-button {
            width: 100%;
            margin: 0;

            &:hover {
                box-shadow: $defShadow;
            }
        }
    }

    .task-info {
        @include add-flex(row, flex-start);
        gap: 15px;
        width: 80%;
        border-top-left-radius: 40px;
        border-top-right-radius: 40px;
        box-shadow: $defShadow;
        position: absolute;
        bottom: -100px;
        padding: 10px 20px;
        transition: 300ms;
        z-index: 5;

        & > img {
            height: 70px;
            width: 70px;
            object-fit: contain;
            filter: invert(1);
        }
        
        .task-info-text {
            @include add-flex(column, center, flex-start);
            
            h4 {
                color: white;
                font-size: set-size(xl);
                text-transform: capitalize;
            }
    
            p {
                color: white;
                font-size: set-size(md);
                margin: 0;

                span {
                    font-weight: bold;
                }
            }
        }

        .arrow-button {
            height: 70px;
            width: 70px;
            position: absolute;
            top: 50%;
            right: 20px;
            transform: translateY(-50%) rotate(-90deg);

            img {
                height: 40px;
            }
        }
    }
}

.active-exercise-modal-task {
    opacity: 1;
    left: 0;
}

#extended-exercise-modal-task {
    height: 100%;

    .task-info {
        position: absolute;
    }
}